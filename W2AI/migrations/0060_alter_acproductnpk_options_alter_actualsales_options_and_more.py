# Generated by Django 4.2.2 on 2024-06-19 09:06

import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('W2AI', '0059_alter_contact_phone'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='acproductnpk',
            options={'verbose_name': 'AgriClinic: Store AgriClinic Products NPK Values', 'verbose_name_plural': 'AgriClinic: Store AgriClinic Products NPK Values'},
        ),
        migrations.AlterModelOptions(
            name='actualsales',
            options={'verbose_name': 'Agri FBI Market Planner: Get User Actual Sales Enquiries', 'verbose_name_plural': 'Agri FBI Market Planner: Get User Actual Sales Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='addedservices',
            options={'verbose_name': 'FieldIntel: Get User Farm Management Solutions Requirements Enquiries', 'verbose_name_plural': 'FieldIntel: Get User Farm Management Solutions Requirements Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='advisor',
            options={'verbose_name': 'AgriClinic: Get User Enquiry from Nutrient Deficiency Form', 'verbose_name_plural': 'AgriClinic: Get User Enquiry from Nutrient Deficiency Form'},
        ),
        migrations.AlterModelOptions(
            name='agmachinespecifications',
            options={'verbose_name': 'AgMachineX: Upload Farm Machinery & Drip Irrigation Specifications', 'verbose_name_plural': 'AgMachineX: Upload Farm Machinery & Drip Irrigation Specifications'},
        ),
        migrations.AlterModelOptions(
            name='agmachinexuserinput',
            options={'verbose_name': 'AgMachinex: Get User Enquiries', 'verbose_name_plural': 'AgMachinex: Get User Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='agrifbi',
            options={'verbose_name': 'Agri FBI: Upload Crop-Specific Market Prospects Reports', 'verbose_name_plural': 'Agri FBI: Upload Crop-Specific Market Prospects Reports'},
        ),
        migrations.AlterModelOptions(
            name='atscontactinfo',
            options={'verbose_name': 'Agritech Mart: Enter ATM Supplier Info', 'verbose_name_plural': 'Agritech Mart: Enter ATM Supplier Info'},
        ),
        migrations.AlterModelOptions(
            name='atscontactproductimages',
            options={'verbose_name': 'Agritech Mart: Enter ATM Supplier Product Images', 'verbose_name_plural': 'Agritech Mart: Enter ATM Supplier Product Images'},
        ),
        migrations.AlterModelOptions(
            name='atscontactproductinfo',
            options={'verbose_name': 'Agritech Mart: Enter ATM Supplier Product Info', 'verbose_name_plural': 'Agritech Mart: Enter ATM Supplier Product Info'},
        ),
        migrations.AlterModelOptions(
            name='atsinfo',
            options={'verbose_name': 'Agritech Mart: Enter ATM Product Categories Info', 'verbose_name_plural': 'Agritech Mart: Enter ATM Product Categories Info'},
        ),
        migrations.AlterModelOptions(
            name='atsintro',
            options={'verbose_name': 'Agritech Mart: Enter ATM Introduction', 'verbose_name_plural': 'Agritech Mart: Enter ATM Introduction'},
        ),
        migrations.AlterModelOptions(
            name='atsroadmap',
            options={'verbose_name': 'Agritech Mart: Enter ATM Roadmap Details', 'verbose_name_plural': 'Agritech Mart: Enter ATM Roadmap Details'},
        ),
        migrations.AlterModelOptions(
            name='atsseller',
            options={'verbose_name': 'Agritech Mart: Get ATM Seller Enquiry', 'verbose_name_plural': 'Agritech Mart: Get ATM Seller Enquiry'},
        ),
        migrations.AlterModelOptions(
            name='brands',
            options={'verbose_name': 'Upload Collabration Images', 'verbose_name_plural': 'Upload Collabration Images'},
        ),
        migrations.AlterModelOptions(
            name='contact',
            options={'verbose_name': 'Get User Messages from Contact Us', 'verbose_name_plural': 'Get User Messages from Contact Us'},
        ),
        migrations.AlterModelOptions(
            name='credentials',
            options={'verbose_name': 'Upload Credential Images', 'verbose_name_plural': 'Upload Credential Images'},
        ),
        migrations.AlterModelOptions(
            name='crop',
            options={'verbose_name': 'AgriClinic: Store Crop-Specific Blanket NPK Values', 'verbose_name_plural': 'AgriClinic: Store Crop-Specific Blanket NPK Values'},
        ),
        migrations.AlterModelOptions(
            name='cropintelinput',
            options={'verbose_name': 'CropIntel: Get User Enquiries', 'verbose_name_plural': 'CropIntel: Get User Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='cropintelknowledge',
            options={'verbose_name': 'CropIntel: Upload CropIntel Knowledge data', 'verbose_name_plural': 'CropIntel: Upload CropIntel Knowledge data'},
        ),
        migrations.AlterModelOptions(
            name='diseaserecognition',
            options={'verbose_name': 'AgriClinic: Get User Image Recognition Enquiries', 'verbose_name_plural': 'AgriClinic: Get User Image Recognition Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='existinguserprofile',
            options={'verbose_name': 'Get Existing User Credentials', 'verbose_name_plural': 'Get Existing User Credentials'},
        ),
        migrations.AlterModelOptions(
            name='fbienquiry',
            options={'verbose_name': 'Agri FBI: Get User Enquiries', 'verbose_name_plural': 'Agri FBI: Get User Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='feedback',
            options={'verbose_name': 'FieldIntel: Get User Feedback for Way2AgriIntel AI Services', 'verbose_name_plural': 'FieldIntel: Get User Feedback for Way2AgriIntel AI Services'},
        ),
        migrations.AlterModelOptions(
            name='fundrequirement',
            options={'verbose_name': 'Agri FBI Market Planner: Get User Fund Requirement Enquiries', 'verbose_name_plural': 'Agri FBI Market Planner: Get User Fund Requirement Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='highlights',
            options={'verbose_name': 'Enter Cross Promotion Content ', 'verbose_name_plural': 'Enter Cross Promotion Content'},
        ),
        migrations.AlterModelOptions(
            name='marketplannerstrategy',
            options={'verbose_name': 'Agri FBI Market Planner: Upload Monthly Crop-Specific Price Outlooks', 'verbose_name_plural': 'Agri FBI Market Planner: Upload Monthly Crop-Specific Price Outlooks'},
        ),
        migrations.AlterModelOptions(
            name='newfarmerpurchasehistory',
            options={'verbose_name': 'NutriTracker New User Fertilizer Purchase Info', 'verbose_name_plural': 'NutriTracker New User Fertilizer Purchase Info'},
        ),
        migrations.AlterModelOptions(
            name='notificationrecord',
            options={'verbose_name': 'NutriTracker User-Notification Record', 'verbose_name_plural': 'NutriTracker User-Notification Record'},
        ),
        migrations.AlterModelOptions(
            name='ntfertilizerpurchase',
            options={'verbose_name': 'NutriTracker New User Fertilizer Purchase Info', 'verbose_name_plural': 'NutriTracker New User Fertilizer Purchase Info'},
        ),
        migrations.AlterModelOptions(
            name='nutritracker',
            options={'verbose_name': 'NutriTracker Existing User Fertilizer Purchase Info', 'verbose_name_plural': 'NutriTracker Existing User Fertilizer Purchase Info'},
        ),
        migrations.AlterModelOptions(
            name='nutritrackerschedule',
            options={'verbose_name': 'NutriTracker Crop-Specific Scheduling Period Record', 'verbose_name_plural': 'NutriTracker Crop-Specific Scheduling Period Record'},
        ),
        migrations.AlterModelOptions(
            name='plot',
            options={'verbose_name': 'Get Registered User Plot Info', 'verbose_name_plural': 'Get Registered User Plot Info'},
        ),
        migrations.AlterModelOptions(
            name='productpurchased',
            options={'ordering': ['-date'], 'verbose_name': 'NutriTracker Existing User Fertilizer Purchase Info', 'verbose_name_plural': 'NutriTracker Existing User Fertilizer Purchase Info'},
        ),
        migrations.AlterModelOptions(
            name='qtyrequirement',
            options={'verbose_name': 'Agri FBI Market Planner: Get User Quantity Requirement Enquiries', 'verbose_name_plural': 'Agri FBI Market Planner: Get User Quantity Requirement Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='seocontent',
            options={'verbose_name': 'Enter SEO Content for WebPages', 'verbose_name_plural': 'Enter SEO Content for WebPages'},
        ),
        migrations.AlterModelOptions(
            name='servicefeedback',
            options={'verbose_name': 'FieldIntel: Get User Feedback for Way2AgriIntel AI Services', 'verbose_name_plural': 'FieldIntel: Get User Feedback for Way2AgriIntel AI Services'},
        ),
        migrations.AlterModelOptions(
            name='symptomrecognitionknowledge',
            options={'verbose_name': 'AgriClinic: Store Crop-Ailments Specific Symptoms', 'verbose_name_plural': 'AgriClinic: Store Crop-Ailments Specific Symptoms'},
        ),
        migrations.AlterModelOptions(
            name='symptomsrecognitioninput',
            options={'verbose_name': 'AgriClinic: Get User Symptom Recognition Enquiries', 'verbose_name_plural': 'AgriClinic: Get User Symptom Recognition Enquiries'},
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'verbose_name': 'Get Registered User Profile Info', 'verbose_name_plural': 'Get Registered User Profile Info'},
        ),
        migrations.RemoveField(
            model_name='actualsales',
            name='city',
        ),
        migrations.RemoveField(
            model_name='fundrequirement',
            name='city',
        ),
        migrations.RemoveField(
            model_name='fundrequirement',
            name='land_area',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='city',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='land_area',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='plot_name1',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='plot_name2',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='plot_name3',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='plot_name4',
        ),
        migrations.RemoveField(
            model_name='nutritracker',
            name='plot_name5',
        ),
        migrations.RemoveField(
            model_name='qtyrequirement',
            name='city',
        ),
        migrations.RemoveField(
            model_name='qtyrequirement',
            name='land_area',
        ),
        migrations.AddField(
            model_name='actualsales',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='actualsales',
            name='zip_code',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='actualsales',
            name='zone',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='atsinfo',
            name='product_category',
            field=models.CharField(blank=True, choices=[('Agri Clinic', 'Agri Clinic'), ('Agritech', 'Agritech')], max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='fundrequirement',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='fundrequirement',
            name='zip_code',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='fundrequirement',
            name='zone',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='harvesting_month',
            field=models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='irrigation_method',
            field=models.CharField(blank=True, choices=[('Flood Irrigation', 'Flood Irrigation'), ('Sprinkler Irrigation', 'Sprinkler Irrigation'), ('Drip Irrigation', 'Drip Irrigation'), ('Other Irrigation Method', 'Other Irrigation Method')], max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='micro_nutrients',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='nitrogen',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='nutrients_freq',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='organic_carbon',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='other_irrigation',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='phosphorous',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='planting_month',
            field=models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='potassium',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='secondary_nutrients',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='village',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='zip_code',
            field=models.CharField(default='', max_length=6),
        ),
        migrations.AddField(
            model_name='nutritracker',
            name='zone',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='qtyrequirement',
            name='village',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='qtyrequirement',
            name='zip_code',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='qtyrequirement',
            name='zone',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='agrifbi',
            name='crop',
            field=models.CharField(choices=[('Arecanut', 'Arecanut'), ('Cashew Nut', 'Cashew Nut'), ('Coconut & Copra', 'Coconut & Copra'), ('Coffee', 'Coffee'), ('Cotton', 'Cotton'), ('Maize', 'Maize'), ('Onion', 'Onion'), ('Pepper', 'Pepper'), ('Tomato', 'Tomato'), ('Tur', 'Tur')], max_length=500),
        ),
        migrations.AlterField(
            model_name='atsinfo',
            name='category_image',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='atsinfo',
            name='category_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='lastmonthreport',
            name='crop',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='last_month_report', to='W2AI.agrifbi'),
        ),
        migrations.AlterField(
            model_name='nutritracker',
            name='crop_density',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='seasonalreport',
            name='crop',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='seasonal_report', to='W2AI.agrifbi'),
        ),
    ]
